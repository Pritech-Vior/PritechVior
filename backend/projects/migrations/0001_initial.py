# Generated by Django 5.2.4 on 2025-08-22 02:40

import django.core.validators
import django.db.models.deletion
import projects.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('all', 'All Users')], default='student', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Course Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon name for frontend', max_length=50)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code', max_length=7)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Project Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TechnologyStack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(choices=[('frontend', 'Frontend'), ('backend', 'Backend'), ('database', 'Database'), ('mobile', 'Mobile'), ('devops', 'DevOps'), ('other', 'Other')], default='other', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True, help_text='Project requirements and specifications')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('client', 'Individual Client'), ('business', 'Business')], default='client', max_length=20)),
                ('academic_level', models.CharField(blank=True, choices=[('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('phd', 'PhD'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('in_progress', 'In Progress'), ('review', 'Under Review'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('technology_preferences', models.JSONField(blank=True, default=dict, help_text='Client technology preferences')),
                ('customizations', models.JSONField(blank=True, default=dict, help_text='Project customizations')),
                ('repository_url', models.URLField(blank=True)),
                ('live_demo_url', models.URLField(blank=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_users', models.ManyToManyField(blank=True, related_name='assigned_projects', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_projects', to=settings.AUTH_USER_MODEL)),
                ('course_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.coursecategory')),
                ('project_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='projects.projectcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=projects.models.generate_request_id, editable=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True)),
                ('request_type', models.CharField(choices=[('new', 'New Custom Project'), ('template', 'Template Customization')], default='new', max_length=20)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('client', 'Individual Client'), ('business', 'Business')], default='client', max_length=20)),
                ('academic_level', models.CharField(blank=True, max_length=50)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('customizations', models.JSONField(blank=True, default=dict)),
                ('technology_notes', models.TextField(blank=True)),
                ('features_required', models.JSONField(blank=True, default=list)),
                ('additional_features', models.TextField(blank=True)),
                ('budget_range', models.CharField(blank=True, max_length=100)),
                ('preferred_deadline', models.DateField(blank=True, null=True)),
                ('timeline_flexibility', models.CharField(choices=[('flexible', 'Flexible'), ('somewhat_flexible', 'Somewhat Flexible'), ('strict', 'Strict Deadline')], default='flexible', max_length=20)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('reviewing', 'Under Review'), ('quoted', 'Quote Provided'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('converted', 'Converted to Project')], default='pending', max_length=20)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('quoted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('estimated_duration', models.PositiveIntegerField(blank=True, help_text='Estimated duration in days', null=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes for staff')),
                ('client_notes', models.TextField(blank=True, help_text='Notes from client')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_requests', to=settings.AUTH_USER_MODEL)),
                ('converted_project', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_request', to='projects.project')),
                ('course_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.coursecategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectRequestCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('client', 'Client'), ('staff', 'Staff'), ('system', 'System')], max_length=10)),
                ('message', models.TextField()),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('is_internal', models.BooleanField(default=False, help_text='Internal message not visible to client')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='projects.projectrequest')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('features', models.JSONField(default=list, help_text='List of included features')),
                ('customizable_features', models.JSONField(default=list, help_text='Features that can be customized')),
                ('estimated_duration', models.PositiveIntegerField(help_text='Estimated duration in days')),
                ('thumbnail', models.ImageField(blank=True, upload_to='project_templates/')),
                ('gallery', models.JSONField(default=list, help_text='List of gallery image URLs')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='active', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.TextField(blank=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('request_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='projects.projectcategory')),
                ('technologies', models.ManyToManyField(blank=True, to='projects.technologystack')),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='projectrequest',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.projecttemplate'),
        ),
        migrations.AddField(
            model_name='project',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='projects.projecttemplate'),
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('client', 'Individual Client'), ('business', 'Business')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('features', models.JSONField(default=list, help_text='List of features included')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['user_type', 'order'],
                'unique_together': {('user_type', 'order')},
            },
        ),
        migrations.AddField(
            model_name='projectrequest',
            name='service_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.servicepackage'),
        ),
        migrations.AddField(
            model_name='project',
            name='service_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.servicepackage'),
        ),
        migrations.AddField(
            model_name='projectrequest',
            name='preferred_technologies',
            field=models.ManyToManyField(blank=True, to='projects.technologystack'),
        ),
        migrations.AddField(
            model_name='project',
            name='technologies',
            field=models.ManyToManyField(blank=True, to='projects.technologystack'),
        ),
        migrations.CreateModel(
            name='ProjectMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('paid', 'Paid'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('due_date', models.DateField()),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('deliverables', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='projects.project')),
            ],
            options={
                'ordering': ['order', 'due_date'],
                'unique_together': {('project', 'order')},
            },
        ),
    ]
