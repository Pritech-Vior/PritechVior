# Generated by Django 5.2.4 on 2025-08-17 11:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('archive', '0005_archivecomment'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchiveVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(help_text='Version number (e.g., 1.0.0, 2.1.3)', max_length=50)),
                ('release_date', models.DateTimeField()),
                ('release_notes', models.TextField(blank=True, help_text="What's new in this version")),
                ('is_latest', models.BooleanField(default=False, help_text='Mark as latest version')),
                ('is_beta', models.BooleanField(default=False, help_text='Beta/pre-release version')),
                ('is_deprecated', models.BooleanField(default=False, help_text='Deprecated version')),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('file_size_display', models.CharField(blank=True, help_text='Human readable file size', max_length=20)),
                ('requirements', models.TextField(blank=True, help_text='Version-specific system requirements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='archive.archive')),
            ],
            options={
                'ordering': ['-release_date'],
                'unique_together': {('archive', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ArchivePlatformDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('windows', 'Windows'), ('macos', 'macOS'), ('linux', 'Linux'), ('android', 'Android'), ('ios', 'iOS')], max_length=20)),
                ('file', models.FileField(blank=True, help_text='Upload file for this platform', null=True, upload_to='archives/%Y/%m/platforms/')),
                ('download_url', models.URLField(blank=True, help_text='External download URL for this platform')),
                ('file_size', models.PositiveIntegerField(default=0, help_text='Platform-specific file size in bytes')),
                ('file_size_display', models.CharField(blank=True, help_text='Human readable file size', max_length=20)),
                ('architecture', models.CharField(blank=True, help_text='e.g., x64, x86, arm64', max_length=20)),
                ('installer_type', models.CharField(blank=True, help_text='e.g., msi, exe, dmg, deb, rpm', max_length=30)),
                ('platform_requirements', models.TextField(blank=True, help_text='Platform-specific requirements')),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_downloads', to='archive.archiveversion')),
            ],
            options={
                'ordering': ['platform'],
                'unique_together': {('version', 'platform', 'architecture')},
            },
        ),
    ]
